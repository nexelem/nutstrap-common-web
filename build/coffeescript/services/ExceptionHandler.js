// Generated by CoffeeScript 1.8.0

/*
 * Custom service for logging errors over `$http`
 */

(function() {
  var ErrorLoggingService;

  ErrorLoggingService = (function() {
    function ErrorLoggingService($log, $injector) {
      this.$log = $log;
      this.$injector = $injector;
      this.$log = $log.getInstance('ErrorLoggingService');
      this.$log.debug("constructing");
    }

    ErrorLoggingService.prototype.logError = function(exception, cause) {
      var error, log;
      try {
        this.http = this.$injector.get("$http");
        log = {
          message: exception.message,
          stack: exception.stack,
          cause: cause
        };
        return this.http.post("/error/log", log);
      } catch (_error) {
        error = _error;
        return this.$log.error("Unable to report client side error: [" + error + "]");
      }
    };

    return ErrorLoggingService;

  })();

  commonModule.service('ErrorLoggingService', ErrorLoggingService);


  /*
  * Decorate the `$exceptionHandler` providing functionality for logging
   */

  commonModule.config(function($provide) {
    return $provide.decorator("$exceptionHandler", function($delegate, ErrorLoggingService) {

      /*
       * @param {Error} exception Exception associated with the error.
       * @param {string} cause optional information about the context in which the error was thrown.
       */
      return function(exception, cause) {
        $delegate(exception, cause);
        return ErrorLoggingService.logError(exception, cause);
      };
    });
  });

}).call(this);
